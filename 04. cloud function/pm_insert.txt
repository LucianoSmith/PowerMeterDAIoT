
exports.pm_insertValue = (event, callback) => {
  console.log("NEW 1");
  const pubsubMessage = event.data;
  var datos_sensor = JSON.parse(Buffer.from(pubsubMessage,'base64').toString());

  const {BigQuery} = require('@google-cloud/bigquery');
  const bigquery = new BigQuery();
  const pubsubGCPdeviceId = datos_sensor.dev_id;

  console.log(datos_sensor.dev_id);
  console.log(datos_sensor.voltage);
  console.log(datos_sensor.current);

  var datos_insert = JSON.parse( '{}' );
  var timestamp_registro = new Date();
  timestamp_registro.setHours(timestamp_registro.getHours() - 3);  
  datos_insert.timestamp = timestamp_registro;
  datos_insert.dev_id = datos_sensor.dev_id;
  datos_insert.volt = datos_sensor.voltage;
  datos_insert.curr = datos_sensor.current;
  datos_insert.rssi = datos_sensor.rssi;
  datos_insert.led1 = datos_sensor.led1;
  datos_insert.led2 = datos_sensor.led2;
  datos_insert.led3 = datos_sensor.led3;
  datos_insert.rele = datos_sensor.rele;
  datos_insert.gcp_device_id = pubsubGCPdeviceId;
  datos_insert.wake_up_count = datos_sensor.wake_up_count;
  datos_insert.last_error_count = datos_sensor.last_error_count;
  datos_insert.last_error_code = datos_sensor.last_error_code;
  datos_insert.last_on_time = datos_sensor.last_on_time;
  datos_insert.sntp_response_time = datos_sensor.sntp_response_time;
  
  bigquery
  .dataset("monitor_data_db")
  .table  ("powermeter")
  .insert (datos_insert, {'ignoreUnknownValues':true, 'raw':false})
  .catch(err => {
    if (err && err.name === 'PartialFailureError') {
      if (err.errors && err.errors.length > 0) {
        console.log('Insert errors:');
        err.errors.forEach(err => console.error(err));
      }
    } else {
      console.error('ERROR BigQuery:', err);
    } 
  });
};